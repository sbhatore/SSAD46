<!DOCTYPE html>
<html>

<head>
    <title>
        Geocoding service
    </title>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">

    <%=stylesheet_link_tag "welcome.css" %>
        <script>
            // In the following example, markers appear when the user clicks on the map.
            // The markers are stored in an array.
            // The user can then click an option to hide, show or delete the markers.
            var map;
            var geocoder;
            var markers = [];


            function initialize() {
                geocoder = new google.maps.Geocoder();
                var centre = new google.maps.LatLng(23.0100, 78.00);
                var mapOptions = {
                    zoom: 5,
                    center: centre,
                    mapTypeId: google.maps.MapTypeId.TERRAIN
                };
                map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);


                codeAddress();
                lat_belt();
                draw_radius();
            }
            var marker;
            var parliament;
            var j;
            var i;
            var flag;

            function codeAddress() {
                    var address = document.getElementById('searchpanel').getElementsByTagName("a");
                    var len = document.getElementById('length').innerHTML; //Number of cities
                    console.log(len);

                    for (i = 0; i < 9; i++) { //only 10 cities could be marked now

                        geocoder.geocode({
                            'address': address[i].innerHTML
                        }, function(results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                map.setCenter(results[0].geometry.location);
                                addMarker(results[0].geometry.location);
                                var marker = new google.maps.Marker({
                                    position: results[0].geometry.location,
                                });
                                marker.setMap(map);



                            } else {
                                console.log('Geocode was not successful for the following reason: ' + status);
                            }
                        });

                    }
                }
                //onmouseover implementation
            function gc(element) {
                geocoder.geocode({
                        'address': element.innerHTML
                    },
                    function(results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {

                            // Clear the previous marker
                            if (marker) marker.setMap(null);

                            // Set the new marker
                            marker = new google.maps.Marker({
                                position: results[0].geometry.location,
                                map: map,
                                animation: google.maps.Animation.BOUNCE

                            });

                            // Center the map on the geocoded result
                            map.setCenter(results[0].geometry.location);
                        }
                    });
            }

            //make latitude belt
            function lat_belt() {
                var address = document.getElementById('city').innerHTML;
                console.log(address);
                var ran = parseFloat(document.getElementById('ran').innerHTML);
                console.log(ran);
                geocoder.geocode({
                    'address': address
                }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);
                        addMarker(results[0].geometry.location);
                        var a = results[0].geometry.location;
                        var lat = a.lat();

                        var lon = a.lng();


                        var l_up = new google.maps.LatLng(lat + ran, -177);
                        var m_up = new google.maps.LatLng(lat + ran, 0);
                        var r_up = new google.maps.LatLng(lat + ran, +177);
                        var l_down = new google.maps.LatLng(lat - ran, +177);
                        var m_down = new google.maps.LatLng(lat - ran, 0);
                        var r_down = new google.maps.LatLng(lat - ran, -177);

                        var myTrip = [l_up, m_up, r_up, l_down, m_down, r_down];



                        var flightPath = new google.maps.Polygon({
                            path: myTrip,
                            strokeColor: "#0000FF",
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            fillColor: "#0000FF",
                            fillOpacity: 0.4
                        });

                        flightPath.setMap(map);

                    } else {
                        console.log('Geocode was not successful for the following reason: ' + status);
                    }

                });
            }

            //Radius range implementation and infowindow showing entered city.

            function draw_radius() {
                var address = document.getElementById('city').innerHTML;
                var rad = parseFloat(document.getElementById('radius').innerHTML);
                rad = rad * 1000;
                console.log(rad);
                console.log(address);
                geocoder.geocode({
                    'address': address
                }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);

                        var marker = new google.maps.Marker({
                            position: results[0].geometry.location,
                        });

                        marker.setMap(map);

                        var infowindow = new google.maps.InfoWindow({
                            content: address
                        });

                        infowindow.open(map, marker);

                        zoom_on_click(marker, address);

                        var a = results[0].geometry.location;
                        var lat = a.lat();

                        var lon = a.lng();


                        var city = new google.maps.LatLng(lat, lon);

                        var myCity = new google.maps.Circle({
                            center: city,
                            radius: rad,
                            strokeColor: "#0000FF",
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            fillColor: "#0000FF",
                            fillOpacity: 0.4
                        });

                        //console.log(myCity);

                        myCity.setMap(map);


                    } else {
                        console.log('Geocode was not successful for the following reason: ' + status);
                    }

                });
            }

            function zoom_on_click(marker, address) {
                google.maps.event.addListener(marker, 'click', function() {
                    map.setZoom(9);
                    map.setCenter(marker.getPosition());
                    var infowindow = new google.maps.InfoWindow({
                        content: address
                    });
                    infowindow.open(map, marker);
                });
            }

            // Add a marker to the map and push to the array.
            function addMarker(location) {
                marker = new google.maps.Marker({
                    //   position: location,
                    position: location,
                    map: map
                });
                markers.push(marker);
            }




            // Sets the map on all markers in the array.


            function setAllMap(map) {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(map);
                }
            }

            // Removes the markers from the map, but keeps them in the array.


            function clearMarkers() {
                setAllMap(null);
            }

            // Shows any markers currently in the array.


            function showMarkers() {
                setAllMap(map);
            }

            // Deletes all markers in the array by removing references to them.


            function deleteMarkers() {
                clearMarkers();
                markers = [];
            }

            google.maps.event.addDomListener(window, 'load', initialize);
        </script>
        <style>
            body {
                background-color: #12181A;
                background-image: url('/assets/scft.jpg');
            }
            #flash_notice {
                font-size: 10;
                color: white;
            }
            #user_nav {
                top: 0px;
                display: block;
                width: 1000px;
                right: 0px;
            }
            #searchpanel {
                border: 2px solid;
                border-radius: 10px;
            }
            #map-canvas {
                margin-left: 23px;
            }
            #searchform {
                float: left;
            }
        </style>

</head>

<body>
    <!--    <div id="panel">
            <input onclick="clearMarkers();" type=button value="Hide Markers">
            <input onclick="showMarkers();" type=button value="Show All Markers">
            <input onclick="deleteMarkers();" type=button value="Delete Markers">
        </div>
    <!onmouseover function call-->
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" href="#">SCFT</a>
            </div>
            <div>
                <ul class="nav navbar-nav">
                    <li class="active"><a href="/welcome">Home</a>
                    </li>
                    <li><a href="http://127.0.0.1:3000/log_out">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div id="searchpanel" data-city="<%=@city%>" data-ran="<%=@lat_range%>" style="overflow-y: auto;height: 600px;">
        <ul>
            Surrogate cities for
            <p id="city" style="color:black;">
                <%=@city %>
            </p>
            Latitude range
            <p id="ran" style="color:black;">
                <%=@lat_range %>
            </p>
            Radius range(in Km)
            <p id="radius" style="color:black;">
                <%=@rad_range%>
            </p>

            Total cities
            <p id="length" style="color:black;">
                <%=@results.length%>
            </p>:
            <% @results.each do |c| %>
                <li>
                    <a href="#" onmouseover="gc(this);">
                        <%=c.City %>
                    </a>
                </li>
                <% end%>
        </ul>
    </div>
    <div id="map-canvas">
    </div>
    <div id="display">
    </div>

</body>

</html>